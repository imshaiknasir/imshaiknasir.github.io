---
import Layout from './Layout.astro';
import Navigation from '../components/Navigation.astro';
import Footer from '../components/Footer.astro';
import { formatDate } from '../utils/dateFormatter';

interface Props {
  title: string;
  description?: string;
  publishDate: Date;
  tags?: string[];
  minutesRead?: number;
}

const { 
  title, 
  description, 
  publishDate,
  tags = [],
  minutesRead = 5
} = Astro.props;
---

<Layout title={`${title} | Shaik Nasir's Blog`} description={description}>
  <Navigation />
  
  <main class="pt-28 pb-16 bg-white">
    <!-- Article header section with max width -->
    <div class="container mx-auto px-4 md:px-8 max-w-3xl mb-8">
      <a href="/blog" class="inline-flex items-center gap-1 mb-8 text-gray-600 hover:text-primary transition-colors">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4">
          <path stroke-linecap="round" stroke-linejoin="round" d="M10.5 19.5L3 12m0 0l7.5-7.5M3 12h18" />
        </svg>
        Back to all posts
      </a>
      
      <h1 class="text-3xl md:text-4xl lg:text-5xl font-bold text-gray-900 tracking-tight mb-6 leading-tight">{title}</h1>
      
      {description && (
        <p class="text-xl text-gray-600 mb-8 leading-relaxed">{description}</p>
      )}
      
      <div class="flex flex-wrap gap-4 items-center text-sm text-gray-600 mb-8">
        <div class="flex items-center gap-2">
          <div class="w-10 h-10 rounded-full bg-primary flex items-center justify-center text-white font-bold">
            SN
          </div>
          <span class="font-medium">Shaik Nasir</span>
        </div>
        <span>•</span>
        <time datetime={publishDate.toISOString()} class="flex items-center gap-1">
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4">
            <path stroke-linecap="round" stroke-linejoin="round" d="M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 012.25-2.25h13.5A2.25 2.25 0 0121 7.5v11.25m-18 0A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75m-18 0v-7.5A2.25 2.25 0 015.25 9h13.5A2.25 2.25 0 0121 9v7.5m-9-6h.008v.008H12v-.008zM12 15h.008v.008H12V15zm0 2.25h.008v.008H12v-.008zM9.75 15h.008v.008H9.75V15zm0 2.25h.008v.008H9.75v-.008zM7.5 15h.008v.008H7.5V15zm0 2.25h.008v.008H7.5v-.008zm6.75-4.5h.008v.008h-.008v-.008zm0 2.25h.008v.008h-.008V15zm0 2.25h.008v.008h-.008v-.008zm2.25-4.5h.008v.008H16.5v-.008zm0 2.25h.008v.008H16.5V15z" />
          </svg>
          {formatDate(publishDate)}
        </time>
        <span>•</span>
        <span class="flex items-center gap-1">
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4">
            <path stroke-linecap="round" stroke-linejoin="round" d="M12 6v6h4.5m4.5 0a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          {minutesRead} min read
        </span>
      </div>
      
      {tags.length > 0 && (
        <div class="flex flex-wrap gap-2 mb-12">
          {tags.map(tag => (
            <span class="bg-gray-100 px-3 py-1 rounded-full text-sm text-gray-700 hover:bg-gray-200 transition cursor-pointer">
              {tag}
            </span>
          ))}
        </div>
      )}
    </div>
    
    <div class="w-full border-t border-gray-100 mb-10"></div>
    
    <!-- Article content -->
    <article class="container mx-auto px-4 md:px-8 max-w-3xl">
      <div class="prose prose-lg md:prose-xl">
        <slot />
      </div>
      
      <div class="mt-16 pt-8 border-t border-gray-200">
        <div class="flex flex-col md:flex-row justify-between items-start md:items-center gap-6">
          <div>
            <h3 class="text-xl font-bold mb-2">Share this post</h3>
            <p class="text-gray-600 text-sm">Found this useful? Let others know!</p>
          </div>
          <div class="flex gap-4">
            <a href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(title)}&url=${encodeURIComponent(`https://imshaiknasir.github.io/blog/${Astro.url.pathname.split('/').pop()}`)}`} target="_blank" rel="noopener noreferrer" class="text-blue-400 hover:text-blue-500 border border-gray-200 rounded-full p-2 transition-colors hover:bg-gray-50">
              <span class="sr-only">Share on Twitter</span>
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-5 h-5"><path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723 9.99 9.99 0 01-3.127 1.195 4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/></svg>
            </a>
            <a href={`https://www.linkedin.com/shareArticle?mini=true&url=${encodeURIComponent(`https://imshaiknasir.github.io/blog/${Astro.url.pathname.split('/').pop()}`)}&title=${encodeURIComponent(title)}`} target="_blank" rel="noopener noreferrer" class="text-blue-700 hover:text-blue-800 border border-gray-200 rounded-full p-2 transition-colors hover:bg-gray-50">
              <span class="sr-only">Share on LinkedIn</span>
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-5 h-5"><path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.454C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.225 0z"/></svg>
            </a>
            <a href={`mailto:?subject=${encodeURIComponent(title)}&body=${encodeURIComponent(`I thought you might find this interesting: https://imshaiknasir.github.io/blog/${Astro.url.pathname.split('/').pop()}`)}`} class="text-gray-700 hover:text-gray-900 border border-gray-200 rounded-full p-2 transition-colors hover:bg-gray-50">
              <span class="sr-only">Share via Email</span>
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
                <path stroke-linecap="round" stroke-linejoin="round" d="M21.75 6.75v10.5a2.25 2.25 0 01-2.25 2.25h-15a2.25 2.25 0 01-2.25-2.25V6.75m19.5 0A2.25 2.25 0 0019.5 4.5h-15a2.25 2.25 0 00-2.25 2.25m19.5 0v.243a2.25 2.25 0 01-1.07 1.916l-7.5 4.615a2.25 2.25 0 01-2.36 0L3.32 8.91a2.25 2.25 0 01-1.07-1.916V6.75" />
              </svg>
            </a>
          </div>
        </div>
      </div>
    </article>
  </main>
  
  <Footer />
</Layout>

<style>
  /* Optional: Add custom styles for specific blog elements */
  .prose :deep(img) {
    @apply mx-auto shadow-md;
  }
  
  .prose :deep(blockquote) {
    @apply border-l-4 border-primary/50 bg-blue-50 py-2 px-4 my-6 not-italic;
  }
  
  .prose :deep(pre) {
    @apply bg-gray-900 text-gray-100 rounded-lg p-4 shadow-md;
  }
  
  .prose :deep(a) {
    @apply text-primary underline decoration-2 decoration-primary/30 
      hover:decoration-primary/100 transition-all duration-200;
  }
  
  .prose :deep(h2) {
    @apply mt-12 mb-6 pb-2 border-b border-gray-200;
  }
  
  .prose :deep(ul) {
    @apply list-disc pl-6 space-y-2 my-6;
  }
  
  .prose :deep(ol) {
    @apply list-decimal pl-6 space-y-2 my-6;
  }
</style> 